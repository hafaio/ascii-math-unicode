export type Kind = "value" | "unary" | "binary" | "infix" | "left" | "right";

export interface Symb {
  input: string;
  tex?: string;
  output: string;
  kind: Kind;
}

export const symbols: Symb[] = [
  //some greek symbols
  { input: "alpha", output: "\u03B1", kind: "value" },
  { input: "beta", output: "\u03B2", kind: "value" },
  { input: "chi", output: "\u03C7", kind: "value" },
  { input: "delta", output: "\u03B4", kind: "value" },
  { input: "Delta", output: "\u0394", kind: "value" },
  { input: "epsi", output: "\u03B5", tex: "epsilon", kind: "value" },
  { input: "varepsilon", output: "\u025B", kind: "value" },
  { input: "eta", output: "\u03B7", kind: "value" },
  { input: "gamma", output: "\u03B3", kind: "value" },
  { input: "Gamma", output: "\u0393", kind: "value" },
  { input: "iota", output: "\u03B9", kind: "value" },
  { input: "kappa", output: "\u03BA", kind: "value" },
  { input: "lambda", output: "\u03BB", kind: "value" },
  { input: "Lambda", output: "\u039B", kind: "value" },
  { input: "lamda", output: "\u03BB", kind: "value" },
  { input: "Lamda", output: "\u039B", kind: "value" },
  { input: "mu", output: "\u03BC", kind: "value" },
  { input: "nu", output: "\u03BD", kind: "value" },
  { input: "omega", output: "\u03C9", kind: "value" },
  { input: "Omega", output: "\u03A9", kind: "value" },
  { input: "phi", output: "\u03D5", kind: "value" },
  { input: "varphi", output: "\u03C6", kind: "value" },
  { input: "Phi", output: "\u03A6", kind: "value" },
  { input: "pi", output: "\u03C0", kind: "value" },
  { input: "Pi", output: "\u03A0", kind: "value" },
  { input: "psi", output: "\u03C8", kind: "value" },
  { input: "Psi", output: "\u03A8", kind: "value" },
  { input: "rho", output: "\u03C1", kind: "value" },
  { input: "sigma", output: "\u03C3", kind: "value" },
  { input: "Sigma", output: "\u03A3", kind: "value" },
  { input: "tau", output: "\u03C4", kind: "value" },
  { input: "theta", output: "\u03B8", kind: "value" },
  { input: "vartheta", output: "\u03D1", kind: "value" },
  { input: "Theta", output: "\u0398", kind: "value" },
  { input: "upsilon", output: "\u03C5", kind: "value" },
  { input: "xi", output: "\u03BE", kind: "value" },
  { input: "Xi", output: "\u039E", kind: "value" },
  { input: "zeta", output: "\u03B6", kind: "value" },

  //binary operation symbols
  { input: "*", output: "\u22C5", tex: "cdot", kind: "value" },
  { input: "**", output: "\u2217", tex: "ast", kind: "value" },
  { input: "***", output: "\u22C6", tex: "star", kind: "value" },
  { input: "//", output: "/", kind: "value" },
  { input: "\\\\", output: "\\", tex: "backslash", kind: "value" },
  { input: "setminus", output: "\u2216", kind: "value" },
  { input: "xx", output: "\u00D7", tex: "times", kind: "value" },
  { input: "|><", output: "\u22C9", tex: "ltimes", kind: "value" },
  { input: "><|", output: "\u22CA", tex: "rtimes", kind: "value" },
  { input: "|><|", output: "\u22C8", tex: "bowtie", kind: "value" },
  { input: "-:", output: "\u00F7", tex: "div", kind: "value" },
  { input: "divide", output: "\u00F7", kind: "value" },
  { input: "@", output: "\u2218", tex: "circ", kind: "value" },
  { input: "o+", output: "\u2295", tex: "oplus", kind: "value" },
  { input: "ox", output: "\u2297", tex: "otimes", kind: "value" },
  { input: "o.", output: "\u2299", tex: "odot", kind: "value" },
  { input: "sum", output: "\u2211", kind: "value" },
  { input: "prod", output: "\u220F", kind: "value" },
  { input: "^^", output: "\u2227", tex: "wedge", kind: "value" },
  { input: "^^^", output: "\u22C0", tex: "bigwedge", kind: "value" },
  { input: "vv", output: "\u2228", tex: "vee", kind: "value" },
  { input: "vvv", output: "\u22C1", tex: "bigvee", kind: "value" },
  { input: "nn", output: "\u2229", tex: "cap", kind: "value" },
  { input: "nnn", output: "\u22C2", tex: "bigcap", kind: "value" },
  { input: "uu", output: "\u222A", tex: "cup", kind: "value" },
  { input: "uuu", output: "\u22C3", tex: "bigcup", kind: "value" },

  //binary relation symbols
  { input: "!=", output: "\u2260", tex: "ne", kind: "value" },
  { input: ":=", output: ":=", kind: "value" },
  { input: "lt", output: "<", kind: "value" },
  { input: "<=", output: "\u2264", tex: "le", kind: "value" },
  { input: "lt=", output: "\u2264", tex: "leq", kind: "value" },
  { input: "gt", output: ">", kind: "value" },
  { input: "mlt", output: "\u226A", tex: "ll", kind: "value" },
  { input: ">=", output: "\u2265", tex: "ge", kind: "value" },
  { input: "gt=", output: "\u2265", tex: "geq", kind: "value" },
  { input: "mgt", output: "\u226B", tex: "gg", kind: "value" },
  { input: "-<", output: "\u227A", tex: "prec", kind: "value" },
  { input: "-lt", output: "\u227A", kind: "value" },
  { input: ">-", output: "\u227B", tex: "succ", kind: "value" },
  { input: "-<=", output: "\u2AAF", tex: "preceq", kind: "value" },
  { input: ">-=", output: "\u2AB0", tex: "succeq", kind: "value" },
  { input: "in", output: "\u2208", kind: "value" },
  { input: "!in", output: "\u2209", tex: "notin", kind: "value" },
  { input: "sub", output: "\u2282", tex: "subset", kind: "value" },
  { input: "sup", output: "\u2283", tex: "supset", kind: "value" },
  { input: "sube", output: "\u2286", tex: "subseteq", kind: "value" },
  { input: "supe", output: "\u2287", tex: "supseteq", kind: "value" },
  { input: "-=", output: "\u2261", tex: "equiv", kind: "value" },
  { input: "~=", output: "\u2245", tex: "cong", kind: "value" },
  { input: "~~", output: "\u2248", tex: "approx", kind: "value" },
  { input: "~", output: "\u223C", tex: "sim", kind: "value" },
  { input: "prop", output: "\u221D", tex: "propto", kind: "value" },

  //logical symbols
  { input: "and", output: "and", kind: "value" },
  { input: "or", output: "or", kind: "value" },
  { input: "not", output: "\u00AC", tex: "neg", kind: "value" },
  { input: "=>", output: "\u21D2", tex: "implies", kind: "value" },
  { input: "if", output: "if", kind: "value" },
  { input: "<=>", output: "\u21D4", tex: "iff", kind: "value" },
  { input: "AA", output: "\u2200", tex: "forall", kind: "value" },
  { input: "EE", output: "\u2203", tex: "exists", kind: "value" },
  { input: "_|_", output: "\u22A5", tex: "bot", kind: "value" },
  { input: "TT", output: "\u22A4", tex: "top", kind: "value" },
  { input: "|--", output: "\u22A2", tex: "vdash", kind: "value" },
  { input: "|==", output: "\u22A8", tex: "models", kind: "value" },

  //grouping brackets
  { input: "(", output: "(", tex: "left(", kind: "left" },
  { input: ")", output: ")", tex: "right)", kind: "right" },
  { input: "[", output: "[", tex: "left[", kind: "left" },
  { input: "]", output: "]", tex: "right]", kind: "right" },
  { input: "{", output: "{", kind: "left" },
  { input: "}", output: "}", kind: "right" },
  { input: "|", output: "|", kind: "value" },
  { input: ":|:", output: "|", kind: "value" },
  { input: "|:", output: "|", kind: "left" },
  { input: ":|", output: "|", kind: "right" },
  {
    input: "(:",
    output: "\u2329",
    tex: "langle",
    kind: "left",
  },
  {
    input: ":)",
    output: "\u232A",
    tex: "rangle",
    kind: "right",
  },
  { input: "<<", output: "\u2329", kind: "left" },
  { input: ">>", output: "\u232A", kind: "right" },
  {
    input: "{:",
    output: "",
    kind: "left",
  },
  {
    input: ":}",
    output: "",
    kind: "right",
  },

  //miscellaneous symbols
  { input: "int", output: "\u222B", kind: "value" },
  { input: "dx", output: "dx", kind: "value" },
  { input: "dy", output: "dy", kind: "value" },
  { input: "dz", output: "dz", kind: "value" },
  { input: "dt", output: "dt", kind: "value" },
  { input: "oint", output: "\u222E", kind: "value" },
  { input: "del", output: "\u2202", tex: "partial", kind: "value" },
  { input: "grad", output: "\u2207", tex: "nabla", kind: "value" },
  { input: "+-", output: "\u00B1", tex: "pm", kind: "value" },
  { input: "-+", output: "\u2213", tex: "mp", kind: "value" },
  { input: "O/", output: "\u2205", tex: "emptyset", kind: "value" },
  { input: "oo", output: "\u221E", tex: "infty", kind: "value" },
  { input: "aleph", output: "\u2135", kind: "value" },
  { input: "...", output: "...", tex: "ldots", kind: "value" },
  { input: ":.", output: "\u2234", tex: "therefore", kind: "value" },
  { input: ":'", output: "\u2235", tex: "because", kind: "value" },
  { input: "/_", output: "\u2220", tex: "angle", kind: "value" },
  { input: "/_\\", output: "\u25B3", tex: "triangle", kind: "value" },
  { input: "'", output: "\u2032", tex: "prime", kind: "value" },
  { input: "\\ ", output: "\u00A0", kind: "value" },
  { input: "frown", output: "\u2322", kind: "value" },
  { input: "quad", output: "\u00A0\u00A0", kind: "value" },
  { input: "qquad", output: "\u00A0\u00A0\u00A0\u00A0", kind: "value" },
  { input: "cdots", output: "\u22EF", kind: "value" },
  { input: "vdots", output: "\u22EE", kind: "value" },
  { input: "ddots", output: "\u22F1", kind: "value" },
  { input: "diamond", output: "\u22C4", kind: "value" },
  { input: "square", output: "\u25A1", kind: "value" },
  { input: "|__", output: "\u230A", tex: "lfloor", kind: "value" },
  { input: "__|", output: "\u230B", tex: "rfloor", kind: "value" },
  { input: "|~", output: "\u2308", tex: "lceiling", kind: "value" },
  { input: "~|", output: "\u2309", tex: "rceiling", kind: "value" },
  { input: "CC", output: "\u2102", kind: "value" },
  { input: "NN", output: "\u2115", kind: "value" },
  { input: "QQ", output: "\u211A", kind: "value" },
  { input: "RR", output: "\u211D", kind: "value" },
  { input: "ZZ", output: "\u2124", kind: "value" },
  { input: "f", output: "f", kind: "unary" },
  { input: "g", output: "g", kind: "unary" },

  //standard functions
  { input: "lim", output: "lim", kind: "value" },
  { input: "Lim", output: "Lim", kind: "value" },
  { input: "sin", output: "sin", kind: "unary" },
  { input: "cos", output: "cos", kind: "unary" },
  { input: "tan", output: "tan", kind: "unary" },
  { input: "sinh", output: "sinh", kind: "unary" },
  { input: "cosh", output: "cosh", kind: "unary" },
  { input: "tanh", output: "tanh", kind: "unary" },
  { input: "cot", output: "cot", kind: "unary" },
  { input: "sec", output: "sec", kind: "unary" },
  { input: "csc", output: "csc", kind: "unary" },
  { input: "arcsin", output: "arcsin", kind: "unary" },
  { input: "arccos", output: "arccos", kind: "unary" },
  { input: "arctan", output: "arctan", kind: "unary" },
  { input: "coth", output: "coth", kind: "unary" },
  { input: "sech", output: "sech", kind: "unary" },
  { input: "csch", output: "csch", kind: "unary" },
  { input: "exp", output: "exp", kind: "unary" },
  { input: "abs", output: "abs", kind: "unary" },
  { input: "norm", output: "norm", kind: "unary" },
  { input: "floor", output: "floor", kind: "unary" },
  { input: "ceil", output: "ceil", kind: "unary" },
  { input: "log", output: "log", kind: "unary" },
  { input: "ln", output: "ln", kind: "unary" },
  { input: "det", output: "det", kind: "unary" },
  { input: "dim", output: "dim", kind: "value" },
  { input: "mod", output: "mod", kind: "value" },
  { input: "gcd", output: "gcd", kind: "unary" },
  { input: "lcm", output: "lcm", kind: "unary" },
  { input: "lub", output: "lub", kind: "value" },
  { input: "glb", output: "glb", kind: "value" },
  { input: "min", output: "min", kind: "value" },
  { input: "max", output: "max", kind: "value" },
  { input: "Sin", output: "Sin", kind: "unary" },
  { input: "Cos", output: "Cos", kind: "unary" },
  { input: "Tan", output: "Tan", kind: "unary" },
  { input: "Arcsin", output: "Arcsin", kind: "unary" },
  { input: "Arccos", output: "Arccos", kind: "unary" },
  { input: "Arctan", output: "Arctan", kind: "unary" },
  { input: "Sinh", output: "Sinh", kind: "unary" },
  { input: "Cosh", output: "Cosh", kind: "unary" },
  { input: "Tanh", output: "Tanh", kind: "unary" },
  { input: "Cot", output: "Cot", kind: "unary" },
  { input: "Sec", output: "Sec", kind: "unary" },
  { input: "Csc", output: "Csc", kind: "unary" },
  { input: "Log", output: "Log", kind: "unary" },
  { input: "Ln", output: "Ln", kind: "unary" },
  { input: "Abs", output: "abs", kind: "unary" },

  //arrows
  { input: "uarr", output: "\u2191", tex: "uparrow", kind: "value" },
  { input: "darr", output: "\u2193", tex: "downarrow", kind: "value" },
  { input: "rarr", output: "\u2192", tex: "rightarrow", kind: "value" },
  { input: "->", output: "\u2192", tex: "to", kind: "value" },
  { input: ">->", output: "\u21A3", tex: "rightarrowtail", kind: "value" },
  { input: "->>", output: "\u21A0", tex: "twoheadrightarrow", kind: "value" },
  {
    input: ">->>",
    output: "\u2916",
    tex: "twoheadrightarrowtail",
    kind: "value",
  },
  { input: "|->", output: "\u21A6", tex: "mapsto", kind: "value" },
  { input: "larr", output: "\u2190", tex: "leftarrow", kind: "value" },
  { input: "harr", output: "\u2194", tex: "leftrightarrow", kind: "value" },
  { input: "rArr", output: "\u21D2", tex: "Rightarrow", kind: "value" },
  { input: "lArr", output: "\u21D0", tex: "Leftarrow", kind: "value" },
  { input: "hArr", output: "\u21D4", tex: "Leftrightarrow", kind: "value" },

  // commands with argument
  { input: "sqrt", output: "sqrt", kind: "unary" },
  { input: "root", output: "root", kind: "binary" },
  { input: "frac", output: "frac", kind: "binary" },
  // matrix
  { input: "stackrel", output: "stackrel", kind: "binary" },
  { input: "overset", output: "stackrel", kind: "binary" },
  { input: "underset", output: "stackrel", kind: "binary" },
  // infix
  { input: "/", output: "/", kind: "infix" },
  { input: "_", output: "_", kind: "infix" },
  { input: "^", output: "^", kind: "infix" },
  // modifiers
  { input: "tilde", output: "~", kind: "unary" },
  { input: "hat", output: "hat", kind: "unary" },
  { input: "bar", output: "bar", kind: "unary" },
  { input: "overline", output: "overline", kind: "unary" },
  { input: "vec", output: "vec", kind: "unary" },
  { input: "dot", output: "dot", kind: "unary" },
  { input: "ddot", output: "ddot", kind: "unary" },
  { input: "overarc", output: "overarc", tex: "overparen", kind: "unary" },
  { input: "ul", output: "ul", tex: "underline", kind: "unary" },
  { input: "ubrace", output: "ubrace", tex: "underbrace", kind: "unary" },
  { input: "obrace", output: "obrace", tex: "overbrace", kind: "unary" },
  // text
  { input: "text", output: "text", kind: "unary" },
  { input: "mbox", output: "mbox", kind: "unary" },
  // tags
  { input: "color", output: "color", kind: "binary" },
  { input: "id", output: "id", kind: "binary" },
  { input: "class", output: "class", kind: "binary" },
  { input: "cancel", output: "cancel", kind: "unary" },
  // fonts
  { input: "bb", output: "bb", kind: "unary" },
  { input: "mathbf", output: "mathbf", kind: "unary" },
  { input: "sf", output: "sf", kind: "unary" },
  { input: "mathsf", output: "mathsf", kind: "unary" },
  { input: "bbb", output: "bbb", kind: "unary" },
  { input: "mathbb", output: "mathbb", kind: "unary" },
  { input: "cc", output: "cc", kind: "unary" },
  { input: "mathcal", output: "mathcal", kind: "unary" },
  { input: "tt", output: "tt", kind: "unary" },
  { input: "mathtt", output: "mathtt", kind: "unary" },
  { input: "fr", output: "fr", kind: "unary" },
  { input: "mathfrak", output: "mathfrak", kind: "unary" },
];
